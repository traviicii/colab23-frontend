import React, { useEffect, useState } from 'react';
import { useSelector, useDispatch } from 'react-redux';
import { removeToast } from '../Actions';

function Toast({ message, type, id }) {
    const dispatch = useDispatch();

    const [isVisible, setIsVisible] = useState(false);

    useEffect(() => {
        // This will run after the component is rendered to fade in a new toast
        const timer = setTimeout(() => {
            setIsVisible(true);
        }, 10); // You can adjust the delay if needed

        // Cleanup function to clear the timeout if component unmounts
        return () => clearTimeout(timer);
    }, []);

    const getToastClasses = () => {
        switch (type) {
            case 'error':
                return 'bg-red-300';
            case 'success':
                return 'bg-green-300';
            default:
                return 'bg-blue-300';  // info
        }
    };

    return (
        <div className={`flex justify-between items-center p-3 max-h-xs w-auto rounded-2xl
                    transition-opacity duration-300 ease-out
                    ${isVisible ? 'opacity-100' : 'opacity-0'} 
                    ${getToastClasses()}` /* Tailwind styles based on `type` */}>
            {type === 'success' ?
                <svg width="30" height="30" viewBox="0 0 210 159" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <g filter="url(#filter0_i_808_6602)">
                        <path d="M207.118 22.0767C201.775 13.0842 187.642 4.65425 151.094 14.0439C138.895 5.82035 124.627 1.0134 109.833 0.143423C95.0389 -0.726552 80.2832 2.3736 67.1632 9.10824C54.0433 15.8429 43.059 25.9554 35.3996 38.351C27.7402 50.7465 23.6975 64.9529 23.7093 79.4319C23.7093 81.4174 23.7827 83.3863 23.9294 85.3387C-2.9142 111.58 -2.45692 127.745 2.9118 136.787C7.95875 145.291 18.0357 148.923 31.0595 148.923C39.3497 148.923 48.8424 147.451 58.9617 144.861C71.1626 153.073 85.4298 157.869 100.22 158.73C115.01 159.591 129.759 156.485 142.872 149.747C155.985 143.009 166.962 132.896 174.616 120.502C182.27 108.109 186.308 93.9064 186.295 79.4319C186.295 77.4382 186.219 75.4692 186.067 73.5086C198.184 61.6123 206.271 50.1711 208.93 40.4175C211.318 31.7972 209.261 25.6588 207.118 22.0767ZM105.002 19.8679C118.812 19.8861 132.207 24.4769 143.002 32.8909C153.797 41.3049 161.354 53.0452 164.439 66.1954C152.423 76.7267 136.334 88.1928 116.79 99.1707C98.3803 109.503 79.9115 117.669 63.365 122.872C54.4545 114.706 48.2609 104.112 45.5875 92.4653C42.9141 80.8184 43.8841 68.6555 48.3717 57.5537C52.8594 46.4519 60.6577 36.9234 70.7554 30.2037C80.8531 23.484 92.7845 19.8831 105.002 19.8679ZM20.483 126.827C19.9664 125.941 20.339 120.026 29.5183 108.866C32.3695 115.82 36.2156 122.343 40.9417 128.241C26.3513 130.4 21.0418 127.753 20.483 126.827ZM105.002 138.996C98.5105 138.997 92.0605 137.98 85.8984 135.985C100.008 130.374 113.707 123.826 126.901 116.386C140.045 109.063 152.655 100.862 164.643 91.8411C161.716 105.177 154.2 117.13 143.348 125.71C132.496 134.291 118.963 138.979 105.002 138.996ZM189.318 35.2966C188.234 39.251 185.245 44.2891 180.52 50.0222C177.669 43.0595 173.82 36.5277 169.088 30.6225C182.493 28.6619 188.709 30.6225 189.539 32.0371C189.683 32.2771 189.86 33.336 189.318 35.2966Z" fill="#F8E1E6" />
                        <ellipse cx="83.5" cy="57.3701" rx="6.5" ry="6.37445" fill="#ECAFBD" />
                        <ellipse cx="127.5" cy="42.6596" rx="6.5" ry="6.37445" fill="#ECAFBD" />
                        <path d="M141 56.8798C141 56.8798 133.875 69.6339 116.527 76.0431C99.1793 82.4523 84 77.812 84 77.812" stroke="#ECAFBD" stroke-width="8" stroke-linecap="round" />
                    </g>
                    <defs>
                        <filter id="filter0_i_808_6602" x="0" y="0" width="210" height="162.871" filterUnits="userSpaceOnUse" color-interpolation-filters="sRGB">
                            <feFlood flood-opacity="0" result="BackgroundImageFix" />
                            <feBlend mode="normal" in="SourceGraphic" in2="BackgroundImageFix" result="shape" />
                            <feColorMatrix in="SourceAlpha" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 127 0" result="hardAlpha" />
                            <feOffset dy="4" />
                            <feGaussianBlur stdDeviation="2" />
                            <feComposite in2="hardAlpha" operator="arithmetic" k2="-1" k3="1" />
                            <feColorMatrix type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0.25 0" />
                            <feBlend mode="normal" in2="shape" result="effect1_innerShadow_808_6602" />
                        </filter>
                    </defs>
                </svg>

                :
                type === "error" ?
                    <svg width="45" height="45" viewBox="0 0 144 144" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M139.832 33.0021C136.283 26.8877 126.894 21.1558 102.617 27.5402C94.514 21.9487 85.0359 18.6803 75.2088 18.0887C65.3817 17.4972 55.58 19.6051 46.8649 24.1843C38.1498 28.7634 30.8533 35.6393 25.7655 44.0676C20.6776 52.4959 17.9922 62.1553 18 72.0002C18 73.3502 18.0487 74.6889 18.1462 76.0164C0.314996 93.8589 0.618749 104.85 4.185 110.998C7.5375 116.781 14.2313 119.25 22.8825 119.25C28.3894 119.25 34.695 118.249 41.4169 116.488C49.5215 122.072 58.9987 125.333 68.8231 125.918C78.6475 126.504 88.445 124.392 97.1554 119.81C105.866 115.229 113.158 108.353 118.242 99.9258C123.326 91.4988 126.009 81.842 126 72.0002C126 70.6446 125.949 69.3058 125.848 67.9727C133.898 59.8839 139.269 52.1046 141.036 45.4727C142.622 39.6114 141.255 35.4377 139.832 33.0021ZM72 31.5002C81.1733 31.5126 90.0714 34.6341 97.2421 40.3551C104.413 46.0761 109.433 54.0588 111.482 63.0002C103.5 70.1608 92.8125 77.9571 79.83 85.4214C67.6012 92.4471 55.3331 97.9989 44.3419 101.537C38.4229 95.9843 34.3088 88.7813 32.5329 80.8622C30.7571 72.943 31.4014 64.6729 34.3824 57.1243C37.3634 49.5758 42.5435 43.0969 49.251 38.5279C55.9586 33.9589 63.8842 31.5105 72 31.5002ZM15.8569 104.226C15.5137 103.624 15.7613 99.6021 21.8588 92.014C23.7527 96.7418 26.3075 101.177 29.4469 105.188C19.755 106.656 16.2281 104.856 15.8569 104.226ZM72 112.5C67.6877 112.501 63.4033 111.81 59.31 110.453C68.6823 106.638 77.7823 102.185 86.5462 97.1271C95.2774 92.1477 103.654 86.5713 111.617 80.4377C109.673 89.5052 104.681 97.6329 97.4719 103.467C90.2634 109.301 81.2736 112.489 72 112.5ZM128.008 41.9908C127.288 44.6796 125.302 48.1052 122.164 52.0033C120.27 47.2691 117.713 42.8279 114.57 38.8127C123.474 37.4796 127.603 38.8127 128.154 39.7746C128.25 39.9377 128.368 40.6577 128.008 41.9908Z" fill="#BCBBC2" />
                        <circle cx="63.5172" cy="60.2071" r="4.34483" fill="#BCBBC2" />
                        <circle cx="92.0689" cy="50.69" r="4.34483" fill="#BCBBC2" />
                        <path d="M65.3793 79.6552C65.3793 79.6552 70.1379 70.7047 81.7241 66.2069C93.3103 61.7091 103.448 64.9655 103.448 64.9655" stroke="#BCBBC2" stroke-width="8" stroke-linecap="round" />
                    </svg>
                :
                type === "info" ?
                        <svg width="35" height="35" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <mask id="mask0_248_12131" style={{ maskType: "luminance" }} maskUnits="userSpaceOnUse" x="0" y="0" width="40" height="40">
                                <path d="M0 0H40V40H0V0Z" fill="white" />
                            </mask>
                            <g mask="url(#mask0_248_12131)">
                                <path d="M24.4533 31.9283L19.7383 27.2133M24.4533 31.9283L26.7866 36.6183C27.9716 35.4633 31.99 30.0867 29.1416 27.2383M24.4533 31.9283L29.1416 27.2383M19.7383 27.2133L24.4533 22.5L24.4766 22.475M19.7383 27.2133L15 24.8333C16.2033 23.6617 21.6683 19.6667 24.4766 22.475M29.1416 27.2383L29.1666 27.2133M29.1416 27.2383L33.3116 23.07C35.0914 21.2897 36.3309 19.0419 36.8866 16.5867L37.4166 14.25L35.08 14.78C32.6247 15.3357 30.3769 16.5752 28.5966 18.355L24.4766 22.475M5.68996 22.1883C3.45829 25.7167 2.60662 28.5317 3.70329 29.63C4.67996 30.6067 7.01496 30.04 9.99996 28.3333M22.1883 5.68999C25.7166 3.45832 28.5316 2.60665 29.63 3.70332C31.1066 5.17832 29.055 9.75999 24.8733 15M7.08996 23.3333C5.52777 21.0861 4.80509 18.3613 5.04825 15.6353C5.2914 12.9093 6.48492 10.3554 8.42016 8.42019C10.3554 6.48495 12.9093 5.29143 15.6353 5.04828C18.3613 4.80512 21.0861 5.5278 23.3333 7.08999" stroke="black" stroke-width="3.33333" stroke-linecap="round" stroke-linejoin="round" />
                            </g>
                        </svg>
                :
                        ''
            }
            <div className='m-2 max-w-xs'>
                {message}
            </div>
            <button onClick={() => {
                setIsVisible(false);
                setTimeout(() => dispatch(removeToast(id)), 300);  // Remove toast after fade-out animation
            }}>
                <svg width="30" height="30" viewBox="0 0 40 40" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M28.75 28.75L11.25 11.25M28.75 11.25L11.25 28.75" stroke="black" stroke-width="2.5" stroke-linecap="round" stroke-linejoin="round" />
                </svg>
            </button>
        </div>
    );
}

export default function ToastList() {
    const toasts = useSelector(state => state.toasts);

    return (
        <div className="fixed top-36 right-4 space-y-2">
            {toasts.map(toast => <Toast key={toast.id} {...toast} />)}
        </div>
    );
}
