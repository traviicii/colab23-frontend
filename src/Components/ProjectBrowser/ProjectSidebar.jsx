import React, { useState } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { setMainFilter, setDuration, setStatus, setRole, setInterests } from '../../Actions';

import ProjectRoleOption from './ProjectRoleOption';
import ProjectStatusOption from './ProjectStatusOption';
import ProjectDurationOption from './ProjectDurationOption';
import ProjectIndustriesOption from './ProjectIndustriesOption';

export default function ProjectSidebar({ openModal }) {
  const dispatch = useDispatch();
  const duration = useSelector((state) => state.filter.duration);
  const status = useSelector((state) => state.filter.status);
  const role = useSelector((state) => state.filter.role);
  const interests = useSelector((state) => state.filter.interests)
  const peopleOrProjects = useSelector((state) => state.filter.mainFilter);

  // Array of fields of interests
  const fieldsOfInterests = [
    'Fintech', 'Education', 'Non-Profit', 'SaaS', 'Healthcare',
    'Sustainability', 'Security', 'Enterprise', 'Marketplace', 'e-Commerce',
    'B2C', 'Retail', 'B2B', 'Blockchain', 'Real Estate',
    'API', 'Artificial Intel', 'Big Data', 'DevOps', 'Deep Tech',
    'Cloud Comput.', 'Agriculture', 'Environment', 'Ment. Health',
    'Home Impr.', 'Community', 'Entertain.', 'Productivity', 'Art/Design', 'Science'
  ];

  const [selectedFields, setSelectedFields] = useState([]);  // Stores selected fields of interest (industries)
  

  // Local states to control visibility
  const [showProjectStatusButtons, setShowProjectStatusButtons] = useState(false);
  const [showDurationButtons, setShowDurationButtons] = useState(false);
  const [showIndustriesButtons, setShowIndustriesButtons] = useState(false);
  const [showProjectRoleIcons, setShowProjectRoleIcons] = useState(false);

  // Function to handle the click of a role option
  const handleRoleClick = (selectedRole) => {
    if (role === null) {
        dispatch(setRole(selectedRole))
    } else  if (role === 'Project Manager' && selectedRole === 'Project Manager') {
        dispatch(setRole(null))
    } else  if (role === 'Developer' && selectedRole === 'Developer') {
        dispatch(setRole(null))
    } else  if (role === 'Designer' && selectedRole === 'Designer') {
        dispatch(setRole(null))
    } else {
    dispatch(setRole(selectedRole));
    console.log(selectedRole);
    console.log(role)
  }};

  // Function to handle the click of a main filter option
  const handleMainFilterClick = (filter) => {
    if (peopleOrProjects === null) {
        dispatch(setMainFilter(filter))
    } else  if (peopleOrProjects === 'Projects' && filter === 'Projects') {
        dispatch(setMainFilter(null))
    } else  if (peopleOrProjects === 'People' && filter === 'People') {
        dispatch(setMainFilter(null))
    } else {
    dispatch(setMainFilter(filter));
    console.log(filter);
  }};

  // Function to handle the click of a status option
  const handleStatusClick = (selectedStatus) => {
    if (status === 'Open' && selectedStatus === 'Open') {
        dispatch(setStatus(null))
    } else  if (status === 'Complete' && selectedStatus === 'Complete') {
        dispatch(setStatus(null))
    } else {
    dispatch(setStatus(selectedStatus));
    console.log(selectedStatus)
  }};

  // Function to handle the click of a duration option
  const handleDurationClick = (option) => {
    if (duration === null) {
        dispatch(setDuration(option))
    } else  if (duration === 'Short-Term' && option === 'Short-Term') {
        dispatch(setDuration(null))
    } else  if (duration === 'Medium-Term' && option === 'Medium-Term') {
        dispatch(setDuration(null))
    } else  if (duration === 'Long-Term' && option === 'Long-Term') {
        dispatch(setDuration(null))
    } else {
    dispatch(setDuration(option));
    console.log(option)
  }};

// Function to update selected industries and dispatch to Redux
    const handleFieldSelection = (field) => {
  
    let updatedSelectedFields;
  
    if (selectedFields.includes(field)) {
      updatedSelectedFields = selectedFields.filter((selectedField) => selectedField !== field);
    } else {
      updatedSelectedFields = [...selectedFields, field];
    }

    // Update the local state
    setSelectedFields(updatedSelectedFields); 
  
    // Dispatch action to update Redux state with the updatedSelectedFields
    dispatch(setInterests(updatedSelectedFields));

    console.log(field)
  };
  

  // Function to toggle the visibility of project status buttons
  const toggleProjectStatusButtons = () => {
    setShowProjectStatusButtons(!showProjectStatusButtons);
  };

  // Function to toggle the visibility of duration buttons
  const toggleDurationButtons = () => {
    setShowDurationButtons(!showDurationButtons);
  };

  // Function to toggle the visibility of project industry buttons
  const toggleProjectIndustryButtons = () => {
    setShowIndustriesButtons(!showIndustriesButtons);
  };

  // Function to toggle the visibility of project role icons
  const toggleProjectRoleIcons = () => {
    setShowProjectRoleIcons(!showProjectRoleIcons);
  };



  

  return (
    <div className='h-full' style={{ overflowY: 'auto', backgroundColor: '#bcbbc2' }}>
      <aside id="sidebar-multi-level-sidebar" className="transition-transform -translate-x-full sm:translate-x-0" aria-label="Sidebar">
        <div className="pb-40" style={{ backgroundColor: '#bcbbc2' }}>
          <p className="text-4xl pt-10 pl-12 mb-4">Explore</p>
          <div className="mb-2 text-center">
            <div className="flex flex-col items-center">
              <button onClick={openModal} className="m-2 px-10 py-2 text-white rounded-lg border border-black hover:bg-gray-200 mt-4 mb-6" style={{ backgroundColor: '#ed4168' }}>
                + Create Your Own Project
              </button>
              <div className='orline flex justify-center items-center w-80'>
                <div className='h-px w-1/2 border-b border-black' />
                <div className='p-2 text-md text-center text-black'>
                  or
                </div>
                <div className='sh-px w-1/2 border-b border-black' />
              </div>
            </div>
          </div>
          <p className="text-md ml-10 mt-4">Filter by:</p>
          <div className="flex items-center space-x-4 ml-10 mt-10 mb-12">
            <button onClick={() => handleMainFilterClick("Projects")}>
                <svg width="90" height="90" viewBox="0 0 96 92" fill="none" xmlns="http://www.w3.org/2000/svg">
                <circle cx="48" cy="30" r="29" stroke="#135279" strokeWidth="2"/>
                <path d="M66.842 19.1672C65.856 17.4687 63.2482 15.8766 56.5045 17.65C54.2537 16.0968 51.6209 15.1889 48.8911 15.0246C46.1614 14.8603 43.4387 15.4458 41.0178 16.7178C38.5969 17.9898 36.5701 19.8998 35.1569 22.2409C33.7436 24.5821 32.9976 27.2653 32.9998 30C32.9998 30.375 33.0133 30.7469 33.0404 31.1156C28.0873 36.0719 28.1717 39.125 29.1623 40.8328C30.0935 42.4391 31.9529 43.125 34.356 43.125C35.8857 43.125 37.6373 42.8469 39.5045 42.3578C41.7557 43.9088 44.3883 44.8146 47.1173 44.9773C49.8463 45.1399 52.5678 44.5532 54.9874 43.2806C57.407 42.008 59.4324 40.0979 60.8447 37.7571C62.257 35.4163 63.0022 32.7338 62.9998 30C62.9998 29.6234 62.9857 29.2516 62.9576 28.8812C65.1935 26.6344 66.6857 24.4734 67.1763 22.6312C67.617 21.0031 67.2373 19.8437 66.842 19.1672ZM47.9998 18.75C50.5479 18.7534 53.0196 19.6205 55.0115 21.2097C57.0033 22.7989 58.3977 25.0163 58.967 27.5C56.7498 29.4891 53.781 31.6547 50.1748 33.7281C46.7779 35.6797 43.3701 37.2219 40.317 38.2047C38.6728 36.6622 37.53 34.6614 37.0367 32.4616C36.5434 30.2619 36.7224 27.9646 37.5504 25.8678C38.3785 23.771 39.8174 21.9713 41.6806 20.7021C43.5438 19.433 45.7454 18.7529 47.9998 18.75ZM32.4045 38.9516C32.3092 38.7844 32.3779 37.6672 34.0717 35.5594C34.5977 36.8727 35.3074 38.1047 36.1795 39.2187C33.4873 39.6266 32.5076 39.1266 32.4045 38.9516ZM47.9998 41.25C46.8019 41.2502 45.6118 41.0582 44.4748 40.6812C47.0782 39.6215 49.606 38.3848 52.0404 36.9797C54.4657 35.5965 56.7926 34.0475 59.0045 32.3437C58.4644 34.8625 57.0777 37.1202 55.0753 38.7407C53.0729 40.3613 50.5758 41.2469 47.9998 41.25ZM63.5576 21.6641C63.3576 22.4109 62.806 23.3625 61.9342 24.4453C61.408 23.1303 60.6978 21.8966 59.8248 20.7812C62.2982 20.4109 63.4451 20.7812 63.5982 21.0484C63.6248 21.0937 63.6576 21.2937 63.5576 21.6641Z" fill="#135279"/>
                <path d="M21.32 77.68V76.368H24.344C24.76 76.368 25.128 76.2827 25.448 76.112C25.7787 75.9413 26.0347 75.7013 26.216 75.392C26.408 75.0827 26.504 74.7147 26.504 74.288C26.504 73.8613 26.408 73.4933 26.216 73.184C26.0347 72.8747 25.7787 72.6347 25.448 72.464C25.128 72.2933 24.76 72.208 24.344 72.208H21.32V70.896H24.44C25.1227 70.896 25.7307 71.0347 26.264 71.312C26.808 71.5893 27.2347 71.984 27.544 72.496C27.864 72.9973 28.024 73.5947 28.024 74.288C28.024 74.9707 27.864 75.568 27.544 76.08C27.2347 76.5813 26.808 76.976 26.264 77.264C25.7307 77.5413 25.1227 77.68 24.44 77.68H21.32ZM20.312 82V70.896H21.816V82H20.312ZM29.7591 82V74.4H31.1991V82H29.7591ZM31.1991 77.664L30.6551 77.424C30.6551 76.4533 30.8791 75.68 31.3271 75.104C31.7751 74.528 32.4205 74.24 33.2631 74.24C33.6471 74.24 33.9938 74.3093 34.3031 74.448C34.6125 74.576 34.9005 74.7947 35.1671 75.104L34.2231 76.08C34.0631 75.9093 33.8871 75.7867 33.6951 75.712C33.5031 75.6373 33.2791 75.6 33.0231 75.6C32.4898 75.6 32.0525 75.7707 31.7111 76.112C31.3698 76.4533 31.1991 76.9707 31.1991 77.664ZM39.403 82.16C38.6563 82.16 37.9843 81.984 37.387 81.632C36.7897 81.28 36.315 80.8053 35.963 80.208C35.611 79.6 35.435 78.9227 35.435 78.176C35.435 77.44 35.611 76.7787 35.963 76.192C36.315 75.5947 36.7897 75.12 37.387 74.768C37.9843 74.416 38.6563 74.24 39.403 74.24C40.139 74.24 40.8057 74.416 41.403 74.768C42.011 75.1093 42.491 75.5787 42.843 76.176C43.195 76.7733 43.371 77.44 43.371 78.176C43.371 78.9227 43.195 79.6 42.843 80.208C42.491 80.8053 42.011 81.28 41.403 81.632C40.8057 81.984 40.139 82.16 39.403 82.16ZM39.403 80.768C39.883 80.768 40.3097 80.656 40.683 80.432C41.0563 80.208 41.3497 79.904 41.563 79.52C41.7763 79.1253 41.883 78.6773 41.883 78.176C41.883 77.6853 41.771 77.248 41.547 76.864C41.3337 76.48 41.0403 76.1813 40.667 75.968C40.3043 75.744 39.883 75.632 39.403 75.632C38.923 75.632 38.4963 75.744 38.123 75.968C37.7497 76.1813 37.4563 76.48 37.243 76.864C37.0297 77.248 36.923 77.6853 36.923 78.176C36.923 78.6773 37.0297 79.1253 37.243 79.52C37.4563 79.904 37.7497 80.208 38.123 80.432C38.4963 80.656 38.923 80.768 39.403 80.768ZM44.0335 85.344C43.5428 85.344 43.1322 85.264 42.8015 85.104C42.4602 84.944 42.1562 84.7147 41.8895 84.416L42.8175 83.472C42.9668 83.6533 43.1322 83.7867 43.3135 83.872C43.4842 83.9573 43.6922 84 43.9375 84C44.2575 84 44.5348 83.8987 44.7695 83.696C45.0042 83.504 45.1215 83.2107 45.1215 82.816V74.4H46.5615V82.8C46.5615 83.3547 46.4442 83.8187 46.2095 84.192C45.9748 84.5653 45.6655 84.848 45.2815 85.04C44.8975 85.2427 44.4815 85.344 44.0335 85.344ZM45.8575 72.88C45.6015 72.88 45.3882 72.7947 45.2175 72.624C45.0468 72.4427 44.9615 72.2187 44.9615 71.952C44.9615 71.696 45.0468 71.4827 45.2175 71.312C45.3882 71.1307 45.6015 71.04 45.8575 71.04C46.1242 71.04 46.3428 71.1307 46.5135 71.312C46.6842 71.4827 46.7695 71.696 46.7695 71.952C46.7695 72.2187 46.6842 72.4427 46.5135 72.624C46.3428 72.7947 46.1242 72.88 45.8575 72.88ZM52.201 82.16C51.4437 82.16 50.761 81.9893 50.153 81.648C49.545 81.296 49.065 80.8213 48.713 80.224C48.361 79.6267 48.185 78.9493 48.185 78.192C48.185 77.4453 48.3557 76.7733 48.697 76.176C49.049 75.5787 49.5183 75.1093 50.105 74.768C50.7023 74.416 51.369 74.24 52.105 74.24C52.809 74.24 53.4277 74.4 53.961 74.72C54.505 75.04 54.9263 75.4827 55.225 76.048C55.5343 76.6133 55.689 77.2533 55.689 77.968C55.689 78.0747 55.6837 78.192 55.673 78.32C55.6623 78.4373 55.641 78.576 55.609 78.736H49.193V77.536H54.841L54.313 78C54.313 77.488 54.2223 77.056 54.041 76.704C53.8597 76.3413 53.6037 76.064 53.273 75.872C52.9423 75.6693 52.5423 75.568 52.073 75.568C51.5823 75.568 51.1503 75.6747 50.777 75.888C50.4037 76.1013 50.1157 76.4 49.913 76.784C49.7103 77.168 49.609 77.6213 49.609 78.144C49.609 78.6773 49.7157 79.1467 49.929 79.552C50.1423 79.9467 50.4463 80.256 50.841 80.48C51.2357 80.6933 51.689 80.8 52.201 80.8C52.6277 80.8 53.017 80.7253 53.369 80.576C53.7317 80.4267 54.041 80.2027 54.297 79.904L55.225 80.848C54.8623 81.2747 54.4143 81.6 53.881 81.824C53.3583 82.048 52.7983 82.16 52.201 82.16ZM60.7311 82.16C59.9845 82.16 59.3071 81.984 58.6991 81.632C58.1018 81.28 57.6271 80.8053 57.2751 80.208C56.9338 79.6 56.7631 78.928 56.7631 78.192C56.7631 77.4453 56.9338 76.7733 57.2751 76.176C57.6271 75.5787 58.1018 75.1093 58.6991 74.768C59.3071 74.416 59.9845 74.24 60.7311 74.24C61.3178 74.24 61.8618 74.352 62.3631 74.576C62.8645 74.7893 63.2965 75.104 63.6591 75.52L62.6991 76.48C62.4645 76.2027 62.1765 75.9947 61.8351 75.856C61.5045 75.7067 61.1365 75.632 60.7311 75.632C60.2511 75.632 59.8245 75.744 59.4511 75.968C59.0778 76.1813 58.7845 76.48 58.5711 76.864C58.3578 77.248 58.2511 77.6907 58.2511 78.192C58.2511 78.6933 58.3578 79.136 58.5711 79.52C58.7845 79.904 59.0778 80.208 59.4511 80.432C59.8245 80.656 60.2511 80.768 60.7311 80.768C61.1365 80.768 61.5045 80.6987 61.8351 80.56C62.1765 80.4107 62.4698 80.1973 62.7151 79.92L63.6591 80.88C63.3071 81.2853 62.8751 81.6 62.3631 81.824C61.8618 82.048 61.3178 82.16 60.7311 82.16ZM66.1615 82V71.216H67.6015V82H66.1615ZM64.2895 75.712V74.4H69.4735V75.712H64.2895ZM73.1439 82.16C72.7172 82.16 72.3119 82.1067 71.9279 82C71.5545 81.8827 71.2079 81.7227 70.8879 81.52C70.5679 81.3067 70.2905 81.056 70.0559 80.768L70.9839 79.84C71.2612 80.1813 71.5812 80.4373 71.9439 80.608C72.3065 80.768 72.7119 80.848 73.1599 80.848C73.6079 80.848 73.9545 80.7733 74.1999 80.624C74.4452 80.464 74.5679 80.2453 74.5679 79.968C74.5679 79.6907 74.4665 79.4773 74.2639 79.328C74.0719 79.168 73.8212 79.04 73.5119 78.944C73.2025 78.8373 72.8719 78.736 72.5199 78.64C72.1785 78.5333 71.8532 78.4 71.5439 78.24C71.2345 78.08 70.9785 77.8613 70.7759 77.584C70.5839 77.3067 70.4879 76.9387 70.4879 76.48C70.4879 76.0213 70.5999 75.6267 70.8239 75.296C71.0479 74.9547 71.3572 74.6933 71.7519 74.512C72.1572 74.3307 72.6425 74.24 73.2079 74.24C73.8052 74.24 74.3332 74.3467 74.7919 74.56C75.2612 74.7627 75.6452 75.072 75.9439 75.488L75.0159 76.416C74.8025 76.1387 74.5359 75.9253 74.2159 75.776C73.9065 75.6267 73.5545 75.552 73.1599 75.552C72.7439 75.552 72.4239 75.6267 72.1999 75.776C71.9865 75.9147 71.8799 76.112 71.8799 76.368C71.8799 76.624 71.9759 76.8213 72.1679 76.96C72.3599 77.0987 72.6105 77.216 72.9199 77.312C73.2399 77.408 73.5705 77.5093 73.9119 77.616C74.2532 77.712 74.5785 77.8453 74.8879 78.016C75.1972 78.1867 75.4479 78.416 75.6399 78.704C75.8425 78.992 75.9439 79.3707 75.9439 79.84C75.9439 80.5547 75.6879 81.12 75.1759 81.536C74.6745 81.952 73.9972 82.16 73.1439 82.16Z" fill="black"/>
                </svg>
            </button>
            <button onClick={() => handleMainFilterClick("People")}>
                <svg width="90" height="90" viewBox="0 0 96 92" fill="none" xmlns="http://www.w3.org/2000/svg">
                <circle cx="48" cy="30" r="29" stroke="#D7F7F9" strokeWidth="2"/>
                <path d="M45.1835 28.2166C46.8835 30.95 46.6335 34.1666 44.6002 35.4666C42.5668 36.7333 39.5335 35.55 37.8168 32.8166C36.1168 30.0833 36.3835 26.8333 38.4168 25.5666C40.4502 24.3 43.4835 25.4833 45.1835 28.2166ZM48.0002 39.5833C51.3335 39.5833 52.1668 38.3333 52.1668 38.3333C52.1668 38.3333 51.3335 41.6666 48.0002 41.6666C44.6668 41.6666 43.8335 38.3833 43.8335 38.3333C43.8335 38.3333 44.6668 39.5833 48.0002 39.5833ZM57.5835 25.5666C59.6168 26.8333 59.8835 30.0833 58.1835 32.8166C56.4668 35.55 53.4335 36.7333 51.4002 35.4666C49.3668 34.1666 49.1168 30.95 50.8168 28.2166C52.5168 25.4833 55.5502 24.3 57.5835 25.5666ZM48.0002 43.3333C52.1668 43.3333 61.3335 34.7666 61.3335 28.3333C61.3335 21.9 55.3502 16.6666 48.0002 16.6666C40.6502 16.6666 34.6668 21.9 34.6668 28.3333C34.6668 34.7666 43.8335 43.3333 48.0002 43.3333ZM48.0002 13.3333C57.1668 13.3333 64.6668 20.0666 64.6668 28.3333C64.6668 35.1333 55.2002 46.6666 48.0002 46.6666C40.8002 46.6666 31.3335 35.1333 31.3335 28.3333C31.3335 20.0666 38.8335 13.3333 48.0002 13.3333Z" fill="#D7F7F9"/>
                <path d="M25.82 77.68V76.368H28.844C29.26 76.368 29.628 76.2827 29.948 76.112C30.2787 75.9413 30.5347 75.7013 30.716 75.392C30.908 75.0827 31.004 74.7147 31.004 74.288C31.004 73.8613 30.908 73.4933 30.716 73.184C30.5347 72.8747 30.2787 72.6347 29.948 72.464C29.628 72.2933 29.26 72.208 28.844 72.208H25.82V70.896H28.94C29.6227 70.896 30.2307 71.0347 30.764 71.312C31.308 71.5893 31.7347 71.984 32.044 72.496C32.364 72.9973 32.524 73.5947 32.524 74.288C32.524 74.9707 32.364 75.568 32.044 76.08C31.7347 76.5813 31.308 76.976 30.764 77.264C30.2307 77.5413 29.6227 77.68 28.94 77.68H25.82ZM24.812 82V70.896H26.316V82H24.812ZM37.3416 82.16C36.5843 82.16 35.9016 81.9893 35.2936 81.648C34.6856 81.296 34.2056 80.8213 33.8536 80.224C33.5016 79.6267 33.3256 78.9493 33.3256 78.192C33.3256 77.4453 33.4963 76.7733 33.8376 76.176C34.1896 75.5787 34.659 75.1093 35.2456 74.768C35.843 74.416 36.5096 74.24 37.2456 74.24C37.9496 74.24 38.5683 74.4 39.1016 74.72C39.6456 75.04 40.067 75.4827 40.3656 76.048C40.675 76.6133 40.8296 77.2533 40.8296 77.968C40.8296 78.0747 40.8243 78.192 40.8136 78.32C40.803 78.4373 40.7816 78.576 40.7496 78.736H34.3336V77.536H39.9816L39.4536 78C39.4536 77.488 39.363 77.056 39.1816 76.704C39.0003 76.3413 38.7443 76.064 38.4136 75.872C38.083 75.6693 37.683 75.568 37.2136 75.568C36.723 75.568 36.291 75.6747 35.9176 75.888C35.5443 76.1013 35.2563 76.4 35.0536 76.784C34.851 77.168 34.7496 77.6213 34.7496 78.144C34.7496 78.6773 34.8563 79.1467 35.0696 79.552C35.283 79.9467 35.587 80.256 35.9816 80.48C36.3763 80.6933 36.8296 80.8 37.3416 80.8C37.7683 80.8 38.1576 80.7253 38.5096 80.576C38.8723 80.4267 39.1816 80.2027 39.4376 79.904L40.3656 80.848C40.003 81.2747 39.555 81.6 39.0216 81.824C38.499 82.048 37.939 82.16 37.3416 82.16ZM45.8718 82.16C45.1251 82.16 44.4531 81.984 43.8558 81.632C43.2584 81.28 42.7838 80.8053 42.4318 80.208C42.0798 79.6 41.9038 78.9227 41.9038 78.176C41.9038 77.44 42.0798 76.7787 42.4318 76.192C42.7838 75.5947 43.2584 75.12 43.8558 74.768C44.4531 74.416 45.1251 74.24 45.8718 74.24C46.6078 74.24 47.2744 74.416 47.8718 74.768C48.4798 75.1093 48.9598 75.5787 49.3118 76.176C49.6638 76.7733 49.8398 77.44 49.8398 78.176C49.8398 78.9227 49.6638 79.6 49.3118 80.208C48.9598 80.8053 48.4798 81.28 47.8718 81.632C47.2744 81.984 46.6078 82.16 45.8718 82.16ZM45.8718 80.768C46.3518 80.768 46.7784 80.656 47.1518 80.432C47.5251 80.208 47.8184 79.904 48.0318 79.52C48.2451 79.1253 48.3518 78.6773 48.3518 78.176C48.3518 77.6853 48.2398 77.248 48.0158 76.864C47.8024 76.48 47.5091 76.1813 47.1358 75.968C46.7731 75.744 46.3518 75.632 45.8718 75.632C45.3918 75.632 44.9651 75.744 44.5918 75.968C44.2184 76.1813 43.9251 76.48 43.7118 76.864C43.4984 77.248 43.3918 77.6853 43.3918 78.176C43.3918 78.6773 43.4984 79.1253 43.7118 79.52C43.9251 79.904 44.2184 80.208 44.5918 80.432C44.9651 80.656 45.3918 80.768 45.8718 80.768ZM55.4623 82.16C54.8863 82.16 54.3636 82.0427 53.8943 81.808C53.4356 81.5627 53.0676 81.2267 52.7903 80.8C52.5129 80.3733 52.3583 79.888 52.3263 79.344V77.056C52.3583 76.5013 52.5129 76.016 52.7903 75.6C53.0783 75.1733 53.4516 74.8427 53.9103 74.608C54.3796 74.3627 54.8969 74.24 55.4623 74.24C56.1556 74.24 56.7796 74.416 57.3343 74.768C57.8996 75.12 58.3423 75.5947 58.6623 76.192C58.9823 76.7893 59.1423 77.4613 59.1423 78.208C59.1423 78.9547 58.9823 79.6267 58.6623 80.224C58.3423 80.8213 57.8996 81.296 57.3343 81.648C56.7796 81.9893 56.1556 82.16 55.4623 82.16ZM55.2223 80.8C55.7023 80.8 56.1236 80.688 56.4863 80.464C56.8489 80.24 57.1369 79.936 57.3503 79.552C57.5636 79.1573 57.6703 78.704 57.6703 78.192C57.6703 77.6907 57.5636 77.2427 57.3503 76.848C57.1369 76.4533 56.8489 76.1493 56.4863 75.936C56.1236 75.712 55.7076 75.6 55.2383 75.6C54.7583 75.6 54.3369 75.712 53.9743 75.936C53.6116 76.1493 53.3289 76.4533 53.1263 76.848C52.9236 77.2427 52.8223 77.696 52.8223 78.208C52.8223 78.7093 52.9183 79.1573 53.1103 79.552C53.3129 79.936 53.5956 80.24 53.9583 80.464C54.3316 80.688 54.7529 80.8 55.2223 80.8ZM51.4622 85.184V74.4H52.9023V76.4L52.6303 78.24L52.9023 80.096V85.184H51.4622ZM60.7747 82V70.576H62.2148V82H60.7747ZM67.8416 82.16C67.0843 82.16 66.4016 81.9893 65.7936 81.648C65.1856 81.296 64.7056 80.8213 64.3536 80.224C64.0016 79.6267 63.8256 78.9493 63.8256 78.192C63.8256 77.4453 63.9963 76.7733 64.3376 76.176C64.6896 75.5787 65.159 75.1093 65.7456 74.768C66.343 74.416 67.0096 74.24 67.7456 74.24C68.4496 74.24 69.0683 74.4 69.6016 74.72C70.1456 75.04 70.567 75.4827 70.8656 76.048C71.175 76.6133 71.3296 77.2533 71.3296 77.968C71.3296 78.0747 71.3243 78.192 71.3136 78.32C71.303 78.4373 71.2816 78.576 71.2496 78.736H64.8336V77.536H70.4816L69.9536 78C69.9536 77.488 69.863 77.056 69.6816 76.704C69.5003 76.3413 69.2443 76.064 68.9136 75.872C68.583 75.6693 68.183 75.568 67.7136 75.568C67.223 75.568 66.791 75.6747 66.4176 75.888C66.0443 76.1013 65.7563 76.4 65.5536 76.784C65.351 77.168 65.2496 77.6213 65.2496 78.144C65.2496 78.6773 65.3563 79.1467 65.5696 79.552C65.783 79.9467 66.087 80.256 66.4816 80.48C66.8763 80.6933 67.3296 80.8 67.8416 80.8C68.2683 80.8 68.6576 80.7253 69.0096 80.576C69.3723 80.4267 69.6816 80.2027 69.9376 79.904L70.8656 80.848C70.503 81.2747 70.055 81.6 69.5216 81.824C68.999 82.048 68.439 82.16 67.8416 82.16Z" fill="black"/>
                </svg>
            </button>
          </div>
          <div className=''>
            <ul className="space-y-2 font-medium">
              <ProjectRoleOption showProjectRoleIcons={showProjectRoleIcons} toggleProjectRoleIcons={toggleProjectRoleIcons} selectedRole={role} handleRoleClick={handleRoleClick}/>
              <ProjectStatusOption showProjectStatusButtons={showProjectStatusButtons} toggleProjectStatusButtons={toggleProjectStatusButtons} selectedStatus={status} handleStatusClick={handleStatusClick}/>
              <ProjectDurationOption showProjectDurationButtons={showDurationButtons} toggleProjectDurationButtons={toggleDurationButtons} selectedDuration={duration} handleDurationClick={handleDurationClick}/>
              <ProjectIndustriesOption selectedFields={interests} showIndustriesButtons={showIndustriesButtons} toggleProjectIndustryButtons={toggleProjectIndustryButtons} toggleField={handleFieldSelection} fieldsOfInterests={fieldsOfInterests}/>
            </ul>
          </div>
        </div>
      </aside>
    </div>
  );
}
